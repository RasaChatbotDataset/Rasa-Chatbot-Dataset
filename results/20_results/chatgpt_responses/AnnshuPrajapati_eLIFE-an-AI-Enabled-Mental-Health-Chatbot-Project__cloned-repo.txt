REQUEST
Your task is to extract the topic/category of a Rasa chatbot. Given:
                - the repository name: eLIFE-an-AI-Enabled-Mental-Health-Chatbot-Project
                - the description: Designed and developed the chatbot, an advanced mental health chatbot utilizing RASA Version 3.1 architecture integrating AI, ML, and NLP for personalized mental health support.
                - the README: # -eLIFE-bot-The-AI-enabled-Chatbot-for-Mental-health
We have designed eLIFE bot which is an innovative mental health chatbot that combine technology and customized features to provide individuals with personalized and efficient mental  health care. With unique capabilities such as gratitude logging, empathetic responses, sentiment  analysis, and a comprehensive database of qualified psychiatrists.
# Jokebot - Rasa Demo Bot

This is a Rasa demo bot. You can try the bot out at [https://avkana.com/jokebot](https://avkana.com/jokebot).

You can ask for Geek jokes, Corny jokes. Also, Kanye, Ron Swanson, Creed, Breaking Bad, Inspiring or Trump quotes.

## ToDo

- Brainy quote, `https://github.com/Hemil96/Brainyquote-API`
- Github Actions pipeline
- Google Assistant integration
- NLU test data
- Core test data
- rasa validate
- Support [multi-intents](https://blog.rasa.com/how-to-handle-multiple-intents-per-input-using-rasa-nlu-tensorflow-pipeline/?_ga=2.50044902.1771157212.1575170721-2034915719.1563294018)

## New Features

**Oct 2022**

- Upgrade to 3.0

**Jan 2021:**

- GitHub actions
  - Build actions docker image
- Creed quotes
- Kanye quotes, `https://api.kanye.rest/?format=text`

## Test Curl

```
curl --location --request POST 'http://localhost:5055/webhook' \
--data-raw '{      
  "next_action": "action_kanye",
  "sender_id": "postman",
  "tracker": {
    "sender_id": "default",
    "slots": {},
    "latest_message": {},
    "latest_event_time": 1535092548.4191391,
    "followup_action": "action_listen",
    "events": []
  },
  "domain": {
    "config": {},
    "intents": [],
    "entities": [],
    "slots": {}
  }
}'
```

```
curl --location --request POST 'http://rasa-production:5005/webhooks/rest/webhook' --header 'Content-Type: application/x-www-form-urlencoded' --data-raw '{"sender": "postman","message": "hello" }'
curl --location --request POST 'http://localhost/webhooks/rest/webhook' --header 'Content-Type: application/x-www-form-urlencoded' --data-raw '{"sender": "postman","message": "hello" }'
curl --location --request POST 'http://localhost:5005/webhooks/rest/webhook' --header 'Content-Type: application/x-www-form-urlencoded' --data-raw '{"sender": "postman","message": "hello" }'
```Docker Hub [image](https://hub.docker.com/r/stephens/jokebot/tags?page=1&ordering=last_updated)

Notes on building the action agent image:

- Setup build using [rasa-action-server-gha](https://github.com/RasaHQ/rasa-action-server-gha)

# Local Action Agent Build

```sh
cd actions
export CR_PAT=xxx
./build.sh
#docker build -t stephens/jokebot:test .
#docker tag stephens/jokebot:test stephens/jokebot:1.0.2
```

                - the list of intents: ['creed_quote', 'corny_joke', 'geek_joke', 'inspiring_quote', 'trump_quote', 'chuck_quote', 'breaking_quote', 'ron_quote', 'kanye_quote', 'greet', 'help', 'goodbye', 'f1_score', 'thankyou', 'version', 'show_slots']
                - the list of entities: ['requested_slot']
                - the list of actions: ['action_chuck', 'action_ron', 'action_breaking', 'action_corny', 'action_inspiring', 'action_geek', 'action_trump', 'action_kanye', 'action_creed', 'action_f1_score', 'action_version', 'action_show_slots']
                Select the topic of the chatbot considering this list of topics: ['Art & Design', 'Auto & Vehicles', 'Android Wear', 'Beauty', 'Books & Reference', 'Business', 'Comics', 'Communication', 'Dating', 'Education', 'Entertainment', 'Events', 'Finance', 'Food & Drink', 'Health & Fitness', 'House & Home', 'Libraries & Demo', 'Lifestyle', 'Maps & Navigation', 'Medical', 'Music & Audio', 'News & Magazines', 'Parenting', 'Personalization', 'Photography', 'Productivity', 'Shopping', 'Social', 'Sports', 'Tools', 'Travel & Local', 'Video Players & Editors', 'Watch Face', 'Weather', 'Games']. If the chatbot's topic matches one of these, use the topic in the list. Otherwise define a new topic. 
                Answer only with the topic, with no further words.

RESPONSE
Medical