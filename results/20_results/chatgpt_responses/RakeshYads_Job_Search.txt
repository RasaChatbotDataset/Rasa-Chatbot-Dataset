REQUEST
Your task is to extract the topic/category of a Rasa chatbot. Given:
                - the repository name: Job_Search
                - the description: Welcome to JobSearch Wizard, your ultimate tool for effortlessly finding your dream job! 🚀✨
                - the README: # JobSearch Wizard 🧙‍♂️💼

Welcome to **JobSearch Wizard**, your ultimate tool for effortlessly finding your dream job! 🚀✨

## What It Does 🌟

**JobSearch Wizard** is a powerful web scraping tool that scours the web for job listings across various platforms. 🕵️‍♀️🔍 It leverages cutting-edge technology to gather and present job opportunities tailored to your preferences.

## Features 🛠️

- **Web Scraping**: Extracts job listings from multiple job sites with precision. 🧹💻
- **Streamlit Dashboard**: User-friendly and interactive interface to display job results. 📊📈
- **Rasa Chatbot**: Conversational AI that understands your job title and location preferences. 🤖💬
- **Customizable Filters**: Fine-tune your search with specific criteria for a more targeted job search. 🎯🔧

## How It Works 🔄

1. **Interact with the Rasa Chatbot**: Share your desired job title and location. 🗣️📍
2. **Search Across Multiple Sites**: Our backend scrapes relevant job listings from top job boards. 🌐🔎
3. **View Results on Streamlit**: Easily browse through a clean and organized dashboard to find your ideal job. 🖥️📋

## Getting Started 🚀

1. Clone the repository: `git clone https://github.com/RakeshYads/Job_Search.git`
2. Install dependencies: `pip install -r requirements.txt`
3. Run the app: `streamlit run app.py`

For detailed instructions, check out our [documentation](link-to-docs).

## Contribute 🤝

We welcome contributions from the community! Feel free to submit issues, feature requests, or pull requests. Let's build the ultimate job search tool together! 🌟💪

---

Ready to revolutionize your job search? Let **JobSearch Wizard** be your guide to finding the perfect opportunity! 🌟🔍💼

**Happy Job Hunting!** 🕵️‍♂️✨

                - the list of intents: ['affirm', 'bot_challenge', 'deny', 'goodbye', 'greet', 'inform_email', 'inform_frequency', 'job_search', 'job_title', 'location', 'mood_bot', 'mood_great', 'mood_unhappy', 'subscribe', 'user_name']
                - the list of entities: ['job_title', 'user', 'name', 'location', 'frequency', 'email']
                - the list of actions: ['utter_job_search_criteria', 'utter_greet', 'utter_happy', 'utter_subscribed', 'utter_bot_mood', 'utter_goodbye', 'action_greet', 'action_end_chat', 'action_job_location']
                Select the topic of the chatbot considering this list of topics: ['Art & Design', 'Auto & Vehicles', 'Android Wear', 'Beauty', 'Books & Reference', 'Business', 'Comics', 'Communication', 'Dating', 'Education', 'Entertainment', 'Events', 'Finance', 'Food & Drink', 'Health & Fitness', 'House & Home', 'Libraries & Demo', 'Lifestyle', 'Maps & Navigation', 'Medical', 'Music & Audio', 'News & Magazines', 'Parenting', 'Personalization', 'Photography', 'Productivity', 'Shopping', 'Social', 'Sports', 'Tools', 'Travel & Local', 'Video Players & Editors', 'Watch Face', 'Weather', 'Games']. If the chatbot's topic matches one of these, use the topic in the list. Otherwise define a new topic. 
                Answer only with the topic, with no further words.

RESPONSE
Business