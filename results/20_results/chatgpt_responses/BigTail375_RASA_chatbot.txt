REQUEST
Your task is to extract the topic/category of a Rasa chatbot. Given:
                - the repository name: RASA_chatbot
                - the description: This is Rasa chatbot
                - the README: # Rasa_chatbot

1. Clone the repository:

    `git clone https://github.com/BigTail375/RASA_chatbot.git`

2. Create virtual environment and activate it:

      To create: `python3 -m venv myenv`
      
      To activate: `source myenv/bin/activate`

3. Change the directory:
    
    `cd Rasa_chatbot` 

4. Install all the dependencies:
    
    `pip install -r requirements.txt`

5. Execute the command to run the chatbot
    
    `rasa run actions & rasa shell`

*Thanks*

                - the list of intents: ['affirm', 'bot_challenge', 'deny', 'goodbye', 'greet', 'mood_great', 'mood_unhappy', 'weather', 'weather_for_location', 'city_info', 'thanks']
                - the list of entities: ['location']
                - the list of actions: ['utter_greet', 'action_get_weather', 'action_hello_world']
                Select the topic of the chatbot considering this list of topics: ['Art & Design', 'Auto & Vehicles', 'Android Wear', 'Beauty', 'Books & Reference', 'Business', 'Comics', 'Communication', 'Dating', 'Education', 'Entertainment', 'Events', 'Finance', 'Food & Drink', 'Health & Fitness', 'House & Home', 'Libraries & Demo', 'Lifestyle', 'Maps & Navigation', 'Medical', 'Music & Audio', 'News & Magazines', 'Parenting', 'Personalization', 'Photography', 'Productivity', 'Shopping', 'Social', 'Sports', 'Tools', 'Travel & Local', 'Video Players & Editors', 'Watch Face', 'Weather', 'Games']. If the chatbot's topic matches one of these, use the topic in the list. Otherwise define a new topic. 
                Answer only with the topic, with no further words.

RESPONSE
Weather