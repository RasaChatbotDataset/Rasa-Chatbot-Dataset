REQUEST
Your task is to extract the topic/category of a Rasa chatbot. Given:
                - the repository name: RASA-RPS-Challenger
                - the description: rock, paper and scissors game developed on rasa.
                - the README: # RASA RPS Challenger

- This chatbot allows users to play the game of rock-paper-scissors through a conversational interface.
- It was built using the Rasa framework.

## Requirements
- Rasa 1.10.0 or higher
- Python 3.6 or higher

Here's an example of how to train and test the chatbot using the provided example files:

- First, navigate to the directory where the example files are located.
- Run the command <b>rasa train</b> to train the chatbot using the data in the <b>data</b> folder.
- Once the training is complete, run the command <b>rasa shell</b> to start the chatbot and interact with it in the command line.




                - the list of intents: ['greet', 'inform', 'goodbye', 'affirm', 'deny', 'bot_challenge']
                - the list of entities: ['choice']
                - the list of actions: ['action_play_rps']
                Select the topic of the chatbot considering this list of topics: ['Art & Design', 'Auto & Vehicles', 'Android Wear', 'Beauty', 'Books & Reference', 'Business', 'Comics', 'Communication', 'Dating', 'Education', 'Entertainment', 'Events', 'Finance', 'Food & Drink', 'Health & Fitness', 'House & Home', 'Libraries & Demo', 'Lifestyle', 'Maps & Navigation', 'Medical', 'Music & Audio', 'News & Magazines', 'Parenting', 'Personalization', 'Photography', 'Productivity', 'Shopping', 'Social', 'Sports', 'Tools', 'Travel & Local', 'Video Players & Editors', 'Watch Face', 'Weather', 'Games']. If the chatbot's topic matches one of these, use the topic in the list. Otherwise define a new topic. 
                Answer only with the topic, with no further words.

RESPONSE
Games