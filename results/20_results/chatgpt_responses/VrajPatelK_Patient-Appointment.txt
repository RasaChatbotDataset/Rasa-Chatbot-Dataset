REQUEST
Your task is to extract the topic/category of a Rasa chatbot. Given:
                - the repository name: Patient-Appointment
                - the description: None
                - the README: ## Patient Appointment Chatbot

### Puropose

* This project is a NLU based chatbot application developed for managing patient appointments. It utilizes various technologies and frameworks to provide an efficient and user-friendly experience. 

### Functionality
##### The chatbot application provides the following functionality:

* Book Appointment: Users can schedule appointments through the chatbot interface.
* Cancel Appointment: Users can cancel their existing appointments.
* The chatbot utilizes API calls to store appointment data in MongoDB and fetch data from the database. It also includes functionality for generating OTPs (One-Time Passwords) for verification purposes and generating unique appointment IDs for each appointment booked.

### Technology Used

##### Frontend Development

<img src="https://img.shields.io/badge/-React.js-61DAFB.svg" alt="React.js" style="margin-right:1rem">

##### Backend Development

<img src="https://img.shields.io/badge/-Python-3776AB.svg" alt="Python" style="margin-right:1rem">

<img src="https://img.shields.io/badge/-PyMongo-47A248.svg" alt="PyMongo" style="margin-right:1rem">

##### Frameworks

<img src="https://img.shields.io/badge/-RASA%20Framework-FF4088.svg" alt="RASA Framework" style="margin-right:1rem">

##### Database

<img src="https://img.shields.io/badge/-MongoDB-green.svg" alt="MongoDB" style="margin-right:1rem">

##### Tools

<img src="https://img.shields.io/badge/-GitHub-181717.svg" alt="GitHub" style="margin-right:1rem">

<img src="https://img.shields.io/badge/-Postman%20API-FF6C37.svg" alt="Postman API" style="margin-right:1rem">


## Setup Environment

### Required Python version
- [python 3.9.13](https://www.python.org/downloads/release/python-3913/) 

### Steps to setup Vertual environment

#### setup for client (must have directory path of client directory in terminal)


- open client directory
  ```
  cd client/
  ```

- install Reactjs modules
  ```
  npm install
  ```

#### setup for server (must have directory path of chatbot directory in terminal)
- open chatbot directory
  ```
  cd chatbot/
  ```

- Create a virtual environment:
  ```bash
  python -m venv venv

- download modules:
  ```bash
  pip install -r requirements.txt


### Steps to run the chatbot


#### run the client 

1. open client directory in terminal
  ```
  cd client/
  ``` 

2. start client side
  ```
  npm start
  ``` 

#### run the rasa server 
1. open chatbot directory in terminal
  ```
  cd chatbot/
  ``` 

2. Activate vertual environment
  ```
  venv\Scripts\Activate.ps1
  ```

3. Train the model
  ```
  rasa train
  ```
4. To start rasa server to access on client side 
  ```
  rasa run -m models --enable-api --cors "*"
  ```

5. To run action.py file (in another terminal)
  ```
  rasa run actions
  ```

6. To reset the conversation state and starts a new dialogue session with the chatbot.
  ```
  /restart
  ```


##### access on client side using .env file 
- add following key-value into .env
REACT_APP_RASA = "http://localhost:5005/webhooks/rest/webhook"



<hr>

###### Note: 

You can also use `rasa interactive` instead of `rasa shell`. By using `rasa interactive` command you can see the exchanged dialouges between bot and user.

<hr>

### Certificate

This is to certify that the project entitled <b>“Patient Appointment Chatbot”</b> is a Bonafide report of the work carried out by  ```Dhruv Patel (Roll No. IT098 ID No: 20ITUBS065) ``` | ```Gaurav Teli(Roll No. IT154 ID No: 20ITUBS007) ``` | ```Vraj Patel (Roll No. IT117 ID No: 20ITUOS071) ``` 
of the Department of Information Technology, semester VI. They were involved in Project work during the academic year ```2022-2023```.

### Contributers
The project was developed by the following individuals:

* ##### Dhruv Patel
* ##### Gaurav Teli
* ##### Vraj Patel
<br>

##### Project Guide

Prof. (Dr.) V. K. Dabhi and Prof. Harshad Prajapati<br>
Department of Information Technology<br>
Faculty of Technology<br>
Dharmsinh Desai University, Nadiad<br>

##### Head, Department of Information Technology

Prof. (Dr.) V. K. Dabhi<br>
Faculty of Technology<br>
Dharmsinh Desai University, Nadiad<br>
# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in your browser.

The page will reload when you make changes.\
You may also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can't go back!**

If you aren't satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you're on your own.

You don't have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn't feel obligated to use this feature. However we understand that this tool wouldn't be useful if you couldn't customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)

                - the list of intents: ['greet', 'goodbye', 'affirm', 'deny', 'mood_great', 'mood_unhappy', 'bot_challenge', 'call_me', 'inform', 'stop', 'get_mobile_no', 'call_cancel_form', 'get_AID', 'get_email', 'wr_otp', 'call_check_appointment_form', 'get_appointment_date', 'get_appointment_time', 'get_dr_name']
                - the list of entities: ['CARDINAL', 'city', 'appointment_date', 'correct_name', 'dr_name', 'checkaid', 'PERSON', 'sentOTP', 'aid', 'GPE', 'name', 'age', 'allAvailableTimeSlots', 'mobile_no', 'DATE', 'allAvailableDates', 'ORG', 'appointment_time', 'otp', 'email']
                - the list of actions: ['action_get_form_details', 'validate_app_form', 'validate_cancel_form', 'action_successfull_cancel', 'validate_status_form', 'action_status_information', 'action_deactivate_form', 'action_ask_appointment_time', 'action_ask_appointment_date', 'action_ask_dr_name']
                Select the topic of the chatbot considering this list of topics: ['Art & Design', 'Auto & Vehicles', 'Android Wear', 'Beauty', 'Books & Reference', 'Business', 'Comics', 'Communication', 'Dating', 'Education', 'Entertainment', 'Events', 'Finance', 'Food & Drink', 'Health & Fitness', 'House & Home', 'Libraries & Demo', 'Lifestyle', 'Maps & Navigation', 'Medical', 'Music & Audio', 'News & Magazines', 'Parenting', 'Personalization', 'Photography', 'Productivity', 'Shopping', 'Social', 'Sports', 'Tools', 'Travel & Local', 'Video Players & Editors', 'Watch Face', 'Weather', 'Games']. If the chatbot's topic matches one of these, use the topic in the list. Otherwise define a new topic. 
                Answer only with the topic, with no further words.

RESPONSE
Medical