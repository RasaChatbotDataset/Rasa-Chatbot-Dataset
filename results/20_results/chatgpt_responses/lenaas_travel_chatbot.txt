REQUEST
Your task is to extract the topic/category of a Rasa chatbot. Given:
                - the repository name: travel_chatbot
                - the description: None
                - the README: # travel_chatbot

Instructions for Rasa installation:
- Create conda environment with python version = 3.9/3.10
- install requirements
- to use GPT API: generate GPT-API-Key (https://platform.openai.com/account/api-keys)
- Store Key as env variable

Starting Rasa Bot:
- navigate to rasa folder
- Terminal 1: rasa shell
- Terminal 2: rasa run actions
                - the list of intents: ['greet', 'goodbye', 'affirm', 'deny', 'mood_great', 'mood_unhappy', 'bot_challenge', 'travel_guide', 'inform', 'GPT']
                - the list of entities: ['time', 'climate', 'interest_2', 'housing', 'activity', 'use_GPT', 'budget', 'interest_1']
                - the list of actions: ['action_get_destinations', 'action_conduct_GPT_search', 'action_reset_slots']
                Select the topic of the chatbot considering this list of topics: ['Art & Design', 'Auto & Vehicles', 'Android Wear', 'Beauty', 'Books & Reference', 'Business', 'Comics', 'Communication', 'Dating', 'Education', 'Entertainment', 'Events', 'Finance', 'Food & Drink', 'Health & Fitness', 'House & Home', 'Libraries & Demo', 'Lifestyle', 'Maps & Navigation', 'Medical', 'Music & Audio', 'News & Magazines', 'Parenting', 'Personalization', 'Photography', 'Productivity', 'Shopping', 'Social', 'Sports', 'Tools', 'Travel & Local', 'Video Players & Editors', 'Watch Face', 'Weather', 'Games']. If the chatbot's topic matches one of these, use the topic in the list. Otherwise define a new topic. 
                Answer only with the topic, with no further words.

RESPONSE
Travel & Local